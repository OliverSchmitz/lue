#!/usr/bin/env bash
set -e

# It is best to run this script with no LUE project-specific environment
# variables set. We don't want the test logic to pick up development files.


build_type="Debug"
source_prefix="$PROJECTS/lue"
tmp_prefix="$HOME/tmp/lue"
build_prefix="$tmp_prefix/build"
local_prefix="$tmp_prefix/local"
install_prefix="$tmp_prefix/install"


mkdir -p tmp_prefix
cd $tmp_prefix


# Install prerequisites.
rm -fr peacock
git clone --recursive https://github.com/geoneric/peacock.git

rm -fr $build_prefix
mkdir $build_prefix
cd $build_prefix
mkdir peacock
cd peacock

rm -fr $local_prefix
mkdir $local_prefix

cmake -Dpeacock_prefix=$local_prefix \
    -Dbuild_boost=true -Dboost_version=1.57.0 \
        -Dboost_build_boost_test=TRUE \
    -Dbuild_docopt=true -Ddocopt_version=0.6.1 \
    -Dbuild_gdal=true -Dgdal_version=2.0.1 \
    -Dbuild_hdf5=true -Dhdf5_version=1.8.14 \
    -Dbuild_pybind11=true -Dpybind11_version=1.8.0 \
    $tmp_prefix/peacock
cmake --build . --target all


# Build LUE.
rm -fr $install_prefix
mkdir $install_prefix

cd $build_prefix
cmake -DCMAKE_BUILD_TYPE=$build_type -DPEACOCK_PREFIX:PATH=$local_prefix -DCMAKE_INSTALL_PREFIX=$install_prefix -DLUE_BUILD_PYTHON_API:BOOL=TRUE $source_prefix
cmake --build . --target all


# Install files needed for creating the LUE Python package.
cmake --build . --target lue_python_package_sources


# Show what we've got.
cd $install_prefix
tree .


# Create source distribution.
python setup.py sdist


# Install package in virtual environment and perform some tests.
virtualenv $tmp_prefix/python
source $tmp_prefix/python/bin/activate
# pip install numpy
cd $tmp_prefix
peacock_include_dir=`grep PYBIND11_INCLUDE_DIRS:PATH $build_prefix/CMakeCache.txt | cut -d "=" -f2`
peacock_lib_dir=`dirname $(grep HDF5_C_LIBRARY:PATH $build_prefix/CMakeCache.txt | cut -d "=" -f2)`
pip install --force-reinstall --upgrade --pre --no-index --find-links=file://$install_prefix/dist \
    --global-option=build_ext \
    --global-option="-I$peacock_include_dir" \
    --global-option="-L$peacock_lib_dir" \
    "lue==@LUE_VERSION@"


echo "********************************************************"
LD_LIBRARY_PATH=$peacock_lib_dir:$LD_LIBRARY_PATH python -c \
    "import lue; print(\"installed LUE version {}\".format(lue.__version__))"
echo "********************************************************"


# # Create platform wheel.
# # Only supported on Windows and OSX:
# python setup.py bdist_wheel


# # Upload distributions.
# cd $install_prefix
# pip install twine
# twine upload dist/*
