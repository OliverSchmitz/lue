#include "lue/framework/algorithm/definition/highest_n.hpp"
#include "lue/framework/algorithm/value_policies/highest_n.hpp"


{% if ZoneElement %}
    // zonal and global
    LUE_REGISTER_HIGHEST_N_ACTION_DECLARATIONS(
        ESC(lue::policy::highest_n::{{ Policies }}<{{ OutputElement }}, {{ ZoneElement }}, {{ FieldElement }}>),
        {{ rank }},
        {{ OutputElement }}_{{ ZoneElement }}_{{ FieldElement }}_{{ rank }});
    LUE_REGISTER_HIGHEST_N_ACTIONS(
        ESC(lue::policy::highest_n::{{ Policies }}<{{ OutputElement }}, {{ ZoneElement }}, {{ FieldElement }}>),
        {{ rank }},
        {{ OutputElement }}_{{ ZoneElement }}_{{ FieldElement }}_{{ rank }});
{% elif FieldElement %}
    // global, handled elsewhere
{% else %}
    // routing
    LUE_REGISTER_HIGHEST_N_ACTION_DECLARATIONS(
        ESC(lue::policy::highest_n::{{ Policies }}<{{ OutputElement }}, {{ RouteID }}>),
        {{ rank }},
        {{ OutputElement }}_{{ RouteID }}_{{ rank }});
    LUE_REGISTER_HIGHEST_N_ACTIONS(
        ESC(lue::policy::highest_n::{{ Policies }}<{{ OutputElement }}, {{ RouteID }}>),
        {{ rank }},
        {{ OutputElement }}_{{ RouteID }}_{{ rank }});
{% endif %}


namespace lue {

    {% if ZoneElement %}
        // zonal
        LUE_INSTANTIATE_HIGHEST_N_ZONAL(
                ESC(policy::highest_n::{{ Policies }}<{{ OutputElement }}, {{ ZoneElement }}, {{ FieldElement }}>),
                {{ rank }}
            );
    {% elif FieldElement %}
        // global
        LUE_INSTANTIATE_HIGHEST_N_GLOBAL(
                ESC(policy::highest_n::{{ Policies }}<{{ OutputElement }}, lue::RouteID, {{ FieldElement }}>),
                {{ rank }}
            );
    {% else %}
        // routing
        LUE_INSTANTIATE_HIGHEST_N(
                ESC(policy::highest_n::{{ Policies }}<{{ OutputElement }}, {{ RouteID }}>),
                {{ rank }}
            );
    {% endif %}

}  // namespace lue
