/*!
    @dir    lue_cxx/include/lue/array
    @brief  Code related to storing object arrays

    ## Design
    - Seperate *object array packing* from *active object tracking*. Some
        optimizations can be made, which should be handled at a higher
        level. So, nothing in the interface should suggest how active
        objects are tracked.
    - Sometimes, it must be possible to determine what kind of object
        array is stored. Sometimes this information is implied by the
        context. How to determine the object array kind is outside of
        the scope of this abstraction layer.

    ## Classes
    - lue::same_shape::Value
    - lue::same_shape::constant_shape::Value
    - lue::same_shape::variable_shape::Value
    - lue::different_shape::Value
    - lue::different_shape::constant_shape::Value
    - lue::different_shape::variable_shape::Value
*/


/*!
    @dir    lue_cxx/include/lue/info
    @brief  Code related to spatio-temporal object information

    # Identity
    ## Classes
    - lue::ActiveID
    - lue::ActiveSetIndex
    - lue::ActiveObjectIndex


    # Locations in time
    ## Classes
    - lue::TimePoint
    - lue::TimeBox


    # Locations in space
    ## Classes
    - lue::StationarySpacePoint
    - lue::MobileSpacePoint


    # Properties
    ## Classes

*/


/*!
    @dir    lue_cxx/include/lue/object
    @brief  Code related to spatio-temporal objects

    In this directory, code is stored for handling spatio-temporal
    objects, in which spatio-temporal object information is combined,
    according to the LUE data model.

    #Property set

    #Phenomenon

    #Universe


*/
