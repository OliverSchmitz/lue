/*!
    @dir    lue_cxx/include/lue/array
    @brief  Code related to storing object arrays

    ## Design
    - Seperate *object array packing* from *active object tracking*. Some
        optimizations can be made, which should be handled at a higher
        level. So, nothing in the interface should suggest how active
        objects are tracked.
    - Sometimes, it must be possible to determine what kind of object
        array is stored. Sometimes this information is implied by the
        context. How to determine the object array kind is outside of
        the scope of this abstraction layer.

    ## Classes
    - lue::same_shape::Value
    - lue::same_shape::constant_shape::Value
    - lue::same_shape::variable_shape::Value
    - lue::different_shape::Value
    - lue::different_shape::constant_shape::Value
    - lue::different_shape::variable_shape::Value
*/


/*!
    @dir    lue_cxx/include/lue/info
    @brief  Code related to spatio-temporal object information

    In this directory, code is stored for handling spatio-temporal
    object information:
    - Identity
    - Locations in time
    - Locations in space
    - Properties

    # Identity

    ## Classes
    - lue::ActiveID
    - lue::ActiveSetID
    - lue::ActiveObjectID


    ## lue::info::ActiveSetID
    Per idx of location in time, idx of first object in active set.

    In case of asynchronous occurrence, the size of the active set is alway
    1, and so, this array is not necessary.

    In case of a constant collection, only the IDs of a single active
    set is stored and, hence, this dataset is not needed.

    This is needed for the same shape x constant shape, and same shape x
    variable shape cases.

    ## lue::info::ActiveObjectID
    Per object in active set, idx of object array in value_o.

    This is only needed for the different shape x constant shape case.

    # Locations in time

    # Locations in space

    # Properties

*/


/*!
    @dir    lue_cxx/include/lue/object
    @brief  Code related to spatio-temporal objects

    In this directory, code is stored for handling spatio-temporal
    objects, in which spatio-temporal object information is combined,
    according to the LUE data model.

    #Property set

    #Phenomenon

    #Universe


*/
